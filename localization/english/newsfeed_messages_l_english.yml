l_english:
  newsfeed_marriage: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('newsfeed_spouse1'))|U] [Concept('marriage', 'Married')|E]"
  newsfeed_marriage_desc: "Your [GetPlayer.Custom2('RelationToMe', SCOPE.sC('newsfeed_spouse1'))] [SCOPE.sC('newsfeed_spouse1').GetUIName] married [SCOPE.sC('newsfeed_spouse2').GetUIName]"
  newsfeed_marriage_me: "You Got [Concept('marriage', 'Married')|E]"
  newsfeed_marriage_me_desc: "[SCOPE.sC('spouse').GetUIName] is now your [SCOPE.sC('spouse').Custom('WifeHusband')]"

  newsfeed_pregnancy_mother: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('mother'))|U] Became Pregnant"
  newsfeed_pregnancy_father: "[GetPlayer.Custom2('newsfeed_relation_possessive', SCOPE.sC('father'))|U] [SCOPE.sC('father').Custom2('RelationToMeShort', SCOPE.sC('mother'))|U] Became Pregnant"
  newsfeed_pregnancy_desc: "[SCOPE.sC('mother').GetUIName|U] became pregnant with [SCOPE.sC('father').GetUINamePossessive] child"
  newsfeed_pregnancy_no_father_desc: "[SCOPE.sC('mother').GetUIName|U] became heavy with child"

  newsfeed_pregnancy_ended_mother: "[GetPlayer.Custom2('newsfeed_relation_possessive', SCOPE.sC('mother'))|U] Pregnancy Ended"
  newsfeed_pregnancy_ended_father: "[GetPlayer.Custom2('newsfeed_relation_possessive', SCOPE.sC('father'))|U] [SCOPE.sC('father').Custom2('RelationToMePossessive', SCOPE.sC('mother'))|U] Pregnancy Ended"
  newsfeed_pregnancy_ended_desc: "[SCOPE.sC('mother').GetUINamePossessive|U] pregnancy with [SCOPE.sC('father').GetUINamePossessive] child was lost"
  newsfeed_pregnancy_ended_no_father_desc: "[SCOPE.sC('mother').GetUINamePossessive|U] pregnancy was lost"

  newsfeed_birth_mother: "Child Born to [GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('mother'))|U]"
  newsfeed_birth_father: "Child Born to [GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('father'))|U]"
  newsfeed_birth_desc: "[SCOPE.sC('child').GetShortUIName|U] was born to [SCOPE.sC('father').GetUIName] and [SCOPE.sC('mother').GetUIName]"
  newsfeed_birth_no_father_desc: "[SCOPE.sC('child').GetShortUIName|U] was born to [SCOPE.sC('mother').GetUIName]"

  newsfeed_birth_twins_mother: "Twins Born to [GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('mother'))|U]"
  newsfeed_birth_twins_father: "Twins Born to [GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('father'))|U]"
  newsfeed_birth_twins_desc: "#high [SCOPE.sC('child').GetFirstName|U]#! and [SCOPE.sC('second_child').GetShortUIName|U] were born to [SCOPE.sC('father').GetUIName] and [SCOPE.sC('mother').GetUIName]"
  newsfeed_birth_twins_no_father_desc: "#high [SCOPE.sC('child').GetFirstName|U]#! and [SCOPE.sC('second_child').GetShortUIName|U] were born to [SCOPE.sC('mother').GetUIName]"

  newsfeed_death: "[Localize(SCOPE.GetFlagName('newsfeed_dead_character_relation'))|U] Passed Away"
  newsfeed_death_desc: "[SCOPE.sC('newsfeed_dead_character').GetUIName|U] [SCOPE.sC('newsfeed_dead_character').GetDeathReason], leaving behind [SCOPE.GetValue('newsfeed_death_gold')|0] gold."

  newsfeed_title_created: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Created Title"
  newsfeed_title_created_desc: "[ROOT.Char.GetUIName|U] created the title [SCOPE.sTitle('title').GetName]"

  newsfeed_titles_inherited: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('newsfeed_inheritor'))|U] Inherited Titles"
  newsfeed_titles_inherited_desc: "[SCOPE.sC('newsfeed_inheritor').GetShortUIName|U] inherited the [SCOPE.sTitle('newsfeed_main_title').GetName][Localize(SCOPE.GetFlagName('newsfeed_title_count'))] from [SCOPE.sC('newsfeed_inheritor').Custom2('newsfeed_her_his_my', GetPlayer.Self)] [SCOPE.sC('newsfeed_inheritor').Custom2('RelationToMeShort', SCOPE.sC('newsfeed_previous_holder'))] [SCOPE.sC('newsfeed_previous_holder').GetShortUIName], along with [SCOPE.GetValue('newsfeed_death_gold')|0] gold."

  newsfeed_title_count_1: ""
  newsfeed_title_count_2: " and one other title"
  newsfeed_title_count_3: " and two other titles"
  newsfeed_title_count_4: " and three other titles"
  newsfeed_title_count_5: " and four other titles"
  newsfeed_title_count_6: " and five other titles"
  newsfeed_title_count_7: " and six other titles"
  newsfeed_title_count_8: " and seven other titles"
  newsfeed_title_count_9: " and eight other titles"
  newsfeed_title_count_10: " and nine other titles"
  newsfeed_title_count_many: " and several other titles"

  newsfeed_title_abdicated_recipient: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Inherited Title"
  newsfeed_title_abdicated_predecessor: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('previous_holder'))|U] Abdicated Title"
  newsfeed_title_abdicated_desc: "[SCOPE.sC('previous_holder').GetUIName|U] abdicated the title [SCOPE.sTitle('title').GetName] to [ROOT.Char.GetUIName]"

  newsfeed_title_usurped_recipient: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Usurped Title"
  newsfeed_title_usurped_predecessor: "[GetPlayer.Custom2('newsfeed_relation_possessive', SCOPE.sC('previous_holder'))|U] Title Was Usurped"
  newsfeed_title_usurped_desc: "[ROOT.Char.GetUIName|U] usurped [SCOPE.sC('previous_holder').GetUINamePossessive] title [SCOPE.sTitle('title').GetName]!"

  newsfeed_title_granted_recipient: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Received Title"
  newsfeed_title_granted_predecessor: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('previous_holder'))|U] Gave Away a Title"
  newsfeed_title_granted_desc: "[SCOPE.sC('previous_holder').GetUIName|U] granted [ROOT.Char.GetUIName] the title [SCOPE.sTitle('title').GetName]"

  newsfeed_title_revoked_recipient: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Revoked a Title"
  newsfeed_title_revoked_predecessor: "[GetPlayer.Custom2('newsfeed_relation_possessive', SCOPE.sC('previous_holder'))|U] Title Was Revoked"
  newsfeed_title_revoked_desc: "[ROOT.Char.GetUIName|U] revoked [SCOPE.sC('previous_holder').GetUINamePossessive] title [SCOPE.sTitle('title').GetName]"

  newsfeed_title_destroyed: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Destroyed a Title"
  newsfeed_title_destroyed_desc: "[ROOT.Char.GetUIName|U] destroyed the title [SCOPE.sTitle('landed_title').GetName]"

  newsfeed_title_gained: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Acquired a Title"
  newsfeed_title_gained_desc: "[ROOT.Char.GetUIName|U] acquired the title [SCOPE.sTitle('title').GetName]"

  newsfeed_title_gained_from: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Acquired a Title"
  newsfeed_title_gained_from_desc: "[ROOT.Char.GetUIName|U] took the title [SCOPE.sTitle('title').GetName] from [SCOPE.sC('previous_holder').GetUIName]"

  newsfeed_title_lost: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Lost a Title"
  newsfeed_title_lost_desc: "[ROOT.Char.GetUIName|U] lost the title [SCOPE.sTitle('title').GetName]"

  newsfeed_title_lost_to: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('previous_holder'))|U] Lost a Title"
  newsfeed_title_lost_to_desc: "[SCOPE.sC('previous_holder').GetUIName|U] lost the title [SCOPE.sTitle('title').GetName] to [ROOT.Char.GetUIName]"

  newsfeed_powerful_vassal: "[powerful_vassal|E] Demands Council Position"
  newsfeed_powerful_vassal_desc: "[SCOPE.sC('vassal').GetUIName|U] wants a seat on your [council|E]"

  newsfeed_war_declared_by_subject: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('attacker'))|U] Declared [war|E]"
  newsfeed_war_declared_by_subject_desc: "[SCOPE.sC('attacker').GetUIName|U] declared the [SCOPE.sWar('war').GetName] against [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('defender'))]"

  newsfeed_war_declared_on_subject: "[war|E] Declared on [GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('defender'))|U]"
  newsfeed_war_declared_on_subject_desc: "[SCOPE.sC('attacker').GetUIName|U] declared the [SCOPE.sWar('war').GetName] against [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('defender'))]"

  newsfeed_war_won: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('protagonist'))|U] Won a [war|E]"
  newsfeed_war_won_desc: "[SCOPE.sC('protagonist').GetUIName|U] defeated [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('antagonist'))] in the [SCOPE.sWar('war').GetName]"

  newsfeed_war_lost: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('protagonist'))|U] Lost a [war|E]"
  newsfeed_war_lost_desc: "[SCOPE.sC('protagonist').GetUIName|U] lost to [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('antagonist'))] in the [SCOPE.sWar('war').GetName]"

  newsfeed_war_white_peace: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('protagonist'))|U] Negotiated a [white_peace|E]"
  newsfeed_war_white_peace_desc: "[SCOPE.sC('protagonist').GetUIName|U] ended the [SCOPE.sWar('war').GetName] with [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('antagonist'))] by white peace"

  newsfeed_war_invalidated: "[GetPlayer.Custom2('newsfeed_relation', SCOPE.sC('protagonist'))|U] Concluded a [war|E]"
  newsfeed_war_invalidated_desc: "[SCOPE.sC('protagonist').GetUINamePossessive|U] [SCOPE.sWar('war').GetName] with [GetPlayer.Custom2('newsfeed_relation_name', SCOPE.sC('antagonist'))] ended by invalid casus belli"

  newsfeed_faith_changed: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Converted Faith"
  newsfeed_faith_changed_same: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Embraces the True Faith"
  newsfeed_faith_changed_heresy: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Embraces Heresy"
  newsfeed_faith_changed_desc: "[ROOT.Char.GetUIName|U] converted from [SCOPE.sFaith('old_faith').GetName] to [ROOT.Char.GetFaith.GetName]"

  newsfeed_culture_changed: "[GetPlayer.Custom2('newsfeed_relation', ROOT.Char)|U] Changed [culture|E]"
  newsfeed_culture_changed_desc: "[ROOT.Char.GetUINamePossessive|U] culture changed to [ROOT.Char.GetCulture.GetName]"

  newsfeed_lover_added: "New [lover|E]"
  newsfeed_lover_added_desc: "[SCOPE.sC('target').GetUIName|U] has become your lover"

  newsfeed_friend_added: "Made a [friend|E]"
  newsfeed_friend_added_desc: "You have become friends with [SCOPE.sC('target').GetUIName]"

  newsfeed_rival_added: "[Concept('rival', 'Rivalry')|E] Formed"
  newsfeed_rival_added_desc: "You have become rivals with [SCOPE.sC('target').GetUIName]"

  newsfeed_lover_removed: "Parted Ways with [lover|E]"
  newsfeed_lover_removed_desc: "[SCOPE.sC('target').GetUIName|U] is no longer your lover"

  newsfeed_friend_removed: "[Concept('friend', 'Friendship')|E] Ended"
  newsfeed_friend_removed_desc: "Your friendship with [SCOPE.sC('target').GetUIName] has ended"

  newsfeed_rival_removed: "[Concept('rival', 'Rivalry')|E] Ended"
  newsfeed_rival_removed_desc: "Your rivalry with [SCOPE.sC('target').GetUIName] has ended"